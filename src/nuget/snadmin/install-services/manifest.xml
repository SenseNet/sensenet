<Package type='Install' >
  <Id>SenseNet.Services</Id>
  <Description>sensenet Services</Description>
  <ReleaseDate>2021-03-16</ReleaseDate>
  <Version>7.7.19</Version>
  <Parameters>
    <Parameter name="@dataSource" description="Name of the database server (. or MACHINENAME\SQL2016). Default: .">.</Parameter>
    <Parameter name="@initialCatalog" description="Database name for the repository. Default: sensenet.">sensenet</Parameter>
    <Parameter name="@userName" description="User name to access the server while installing."></Parameter>
    <Parameter name="@password" description="Password to access the server while installing."></Parameter>
    <Parameter name="@dbUserName" description="User name to access the server by the installed software."></Parameter>
    <Parameter name="@dbPassword" description="Password to access the server by the installed software."></Parameter>
    <Parameter name="@recreateDbIfExists">false</Parameter>    
    <Parameter name="@importOldServices">true</Parameter>    
  </Parameters>
  <Steps>
    <Phase>

      <IfDatabaseExists Name="@initialCatalog" DataSource="@dataSource" UserName="@userName" Password="@password">
        <Then>
          <If condition="@recreateDbIfExists">
            <Then>
              <Trace>Database exists, re-creating it...</Trace>
              <Assign Name="@needToCreate">true</Assign>
            </Then>
            <Else>
              <Trace>Database exists, skipping database creation.</Trace>
              <Assign Name="@needToCreate">false</Assign>
            </Else>
          </If>
        </Then>
        <Else>
          <Assign Name="@needToCreate">true</Assign>
        </Else>
      </IfDatabaseExists>

      <If condition="@needToCreate">
        <Then>
          <IfMatch Value="@dataSource" Pattern="\w+\.database\.windows\.net">
            <Then>
              <Assign Name="@createScript">scripts\Create_SenseNet_Azure_Database.sql</Assign>
            </Then>
            <Else>
              <Assign Name="@createScript">scripts\Create_SenseNet_Database.sql</Assign>
            </Else>
          </IfMatch>
          <!-- Create a temp copy of the DB creator script and insert the db name to create. -->
          <Delete>App_Data\scripts\Create_SenseNet_Database_TEMP.sql</Delete>
          <Copy Source="@createScript"
                TargetDirectory="App_Data\scripts"
                NewName="Create_SenseNet_Database_TEMP.sql" />
          <ReplaceText Template="$(INITIALCATALOG)" Path="App_Data\scripts\Create_SenseNet_Database_TEMP.sql">@initialCatalog</ReplaceText>

          <ExecuteDatabaseScript InitialCatalogName="Master" DataSource="@dataSource" UserName="@userName" Password="@password" Query="..\..\..\App_Data\scripts\Create_SenseNet_Database_TEMP.sql" />
        </Then>
      </If>
      
      <CheckDatabaseConnection InitialCatalogName="@initialCatalog" DataSource="@dataSource" UserName="@userName" Password="@password"/>
      <ExecuteDatabaseScript InitialCatalogName="@initialCatalog" DataSource="@dataSource" UserName="@userName" Password="@password" Query="scripts\MsSqlInstall_Security.sql" />
      <ExecuteDatabaseScript InitialCatalogName="@initialCatalog" DataSource="@dataSource" UserName="@userName" Password="@password" Query="scripts\MsSqlInstall_Schema.sql" />
      <InstallInitialData InitialCatalogName="@initialCatalog" DataSource="@dataSource" UserName="@userName" Password="@password" />

      <!-- Insert new connection string values into config files. -->
      <EditConnectionString ConnectionName="SnCrMsSql" InitialCatalogName="@initialCatalog" DataSource="@dataSource" DbUserName="@dbUserName" DbPassword="@dbPassword" File="Web.config" />
      <ForEach item="@configPath" files="Tools\*.config">
        <Block>
          <EditConnectionString ConnectionName="SnCrMsSql" InitialCatalogName="@initialCatalog" DataSource="@dataSource" DbUserName="@dbUserName" DbPassword="@dbPassword" File="@configPath" />
        </Block>
      </ForEach>
      
      <!-- Cleanup -->
      <Delete>App_Data\scripts\Create_SenseNet_Database_TEMP.sql</Delete>
    </Phase>
    <Phase>
      <StartRepository startIndexingEngine="false" startWorkflowEngine="false" />
      <Import target="/Root" resetSecurity="true" LogLevel="Verbose" source="import" />

      <If condition="@importOldServices">
        <Then>
          <Import target="/Root" LogLevel="Verbose" source="importServicesOld" />
        </Then>
      </If>
      
    </Phase>
    <Phase>
      <StartRepository startIndexingEngine="false" startWorkflowEngine="false" />
      <PopulateIndex />
    </Phase>
  </Steps>
</Package>